name: deploy website from published branch

on:
  push:
    branches:
      - published

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.repository == 'docker/docker.github.io'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          targets: release
        env:
          JEKYLL_ENV: production
      -
        name: Upload files to S3 bucket
        run: |
          aws s3 sync --acl public-read _site s3://docs.docker.com-us-east-1/ --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Update S3 website config
        uses: ./.github/actions/update-website-config
        with:
          bucketName: docs.docker.com-us-east-1
          regionName: us-east-1
          websiteConfig: _website-config-docs.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Invalidate docs website cache
        run: |
          aws --region us-east-1 lambda invoke --function-name arn:aws:lambda:us-east-1:710015040892:function:docs-cache-invalidator response.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Send Slack notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Successfully published docs. https://docs.docker.com/"}' $SLACK
        env:
          SLACK: ${{ secrets.SLACK_WEBHOOK }}
